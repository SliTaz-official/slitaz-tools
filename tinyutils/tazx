#!/bin/sh
#
# Tazx - Ncurses X configuration for SliTaz GNU/Linux using Dialog boxes.
# This tinyutil is part of slitaz-tools. Tazx can configure Xorg with 
# several Window Managers. The GTK interface to configure X is in tazbox.
#
# (c) 2011-2014 SliTaz GNU/Linux - GNU GPL v3.
# Authors: Christophe Lincoln <pankso@slitaz.org>
#          Pascal Bellard <pascal.bellard@slitaz.org>
#

# 20140317: most xsession, xinitrc are obsolete, provided system files
# are in /etc/skel and WM config files should no longer be copied by
# tazx to user home. If some configs are needed by WMs they should
# be set by a /usr/bin/wmname-session script I guess. - Pankso

. /lib/libtaz.sh
. /etc/slitaz/slitaz.conf
. /etc/slitaz/applications.conf

installed="$PKGS_DB/installed"

export TEXTDOMAIN='slitaz-tools' #i18n
: ${DIALOG=dialog --timeout 60}

WM_i18n=$(_n 'Window Manager:'| sed s/://)
INST_i18n=$(_n 'Install Xorg' | sed 's|Xorg||;s|X.org||;s| ||')

# Default user for config files in Live mode, id is 1000 since it is
# created by /etc/init.d/bootopts.sh.
USER=$(cat /etc/passwd | grep 1000 | cut -d ":" -f 1)

#
# Functions
#

# Save chunk of xorg.conf into specified file
save_chunk() {
	sed -e '/Section "'${1#*-}'"/,/EndSection/!d' \
		-e "s/EndSection/EndSection\n/" $xorg_template > \
		$xorg_config/$1.conf
}

gen_xorg_conf_file() {
	# Create a xorg.conf if needed.
	if [ ! -f /etc/X11/xorg.conf ]; then
		cat > /etc/X11/xorg.conf << EOT
# You can put here your own Xorg configurations. This config file is read
# before all files in /etc/X11/xorg.conf.d and will NOT be erased by any
# updates.
EOT
	fi
}

# Generate or regenerate 40-Keyboard.conf
keyboard_conf() {
	# Configure the keyboard with the right keymap.
	keymap=$(cat /etc/keymap.conf)
	keyboard_config="/etc/X11/xorg.conf.d/40-Keyboard.conf"
	variant=""
	# this XkbOption moved from 40-evdev.conf (xorg-xf86-input-evdev)
	options="terminate:ctrl_alt_bksp"
	gettext "Creating:"; echo -n " $keyboard_config"
	mkdir -p $(dirname $keyboard_config)
	case "$keymap" in
		fr_CH-latin1)
			# Swiss FrenCH
			layout="ch"; variant="fr" ;;
		uk)
			# English UK
			layout="gb" ;;
		ru)
			# Russian
			layout="us,ru"
			options="grp:ctrl_shift_toggle, grp_led:scroll, $options" ;;
		ua)
			# Ukrainian
			layout="us,ua,ru"
			options="grp:ctrl_shift_toggle, $options" ;;
		slovene)
			# Slovenian
			layout="si"; options="grp:alt_shift_toggle, $options" ;;
		us-acentos)
			layout="us"; variant="intl" ;;
		*)
			# Use clean /etc/keymap.conf value.
			keymap=${keymap%-latin1}
			keymap=${keymap%-lat2}
			keymap=${keymap%-lat6}
			layout=${keymap%-abnt2}
	esac
	cat > $keyboard_config << EOC
Section "InputClass"
	Identifier "Keyboard Defaults"
	MatchIsKeyboard "yes"
	Option "XkbLayout" "$layout"
	Option "XkbVariant" "$variant"
	Option "XkbOptions" "$options"
EndSection
EOC
	status
	[ x$variant == x ] && sed -i '/XkbVariant/d' ${keyboard_config}
}

# Populate xorg.conf.d.
xorg_conf_d() {
	# Define the xorg.conf.d (can be /etc/X11/xorg.conf.d or /usr/share/X11/xorg.conf.d)
	xorg_config=/etc/X11/xorg.conf.d

	# Define the xorg.conf.new place.
	xorg_template=/root/xorg.conf.new

	# Obtain a default configuration file from Xorg.
	Xorg -configure :2

	# Backup existing config.
	tar -cf $xorg_config/../Previous_xorg.conf.d.tar $xorg_config/ &> /dev/null 

	# Put the different sections in separate files in the config directory.
	save_chunk 10-ServerLayout
	sed -i '/Core/d' $xorg_config/10-ServerLayout.conf
	save_chunk 20-Files
	save_chunk 30-Module
	save_chunk 50-Monitor
	save_chunk 60-Device
	save_chunk 70-Screen

	# Remove the template.
	rm $xorg_template

	# Keyboard & xorg.conf
	keyboard_conf
	gen_xorg_conf_file
}

dialog_end() {
	retval=$?
	exec 3>&-
	# Continue or exit.
	case $retval in
		0|3) continue ;;
		1|255) exit 0 ;;
	esac
}

# Install xorg server.
install_xorg() {
	[ -f "/var/lib/tazpkg/packages.list" ] || tazpkg recharge
	exec 3>&1
	value=$($DIALOG \
		--clear --colors --scrollbar --default-item "$1" \
		--title " $(_n 'Install Xorg') " \
		--menu "$(_n 'Tazx helps you to select your X driver.')" 16 70 8 \
		Auto_select "$(_n 'Auto configuring Xorg...' | sed 's/X//;s/org//;s|...$||;s| |_|')" \
	$(fgrep xorg-xf86-video /var/lib/tazpkg/packages.list | cut -d- -f4 | \
		while read x; do echo $x; _ 'driver'; done) \
	"quit" "$(_n 'Quit')" \
	2>&1 1>&3)
	dialog_end

	# Set selected value.
	case $value in
		quit) exit 0 ;;
		*)
			[ ! $value = Auto_select ] || autoselect_driver IN_List
			inst_pkg xorg-server
			inst_pkg xorg-xf86-video-$value
			xorg_conf_d ;;
	esac
}

autoselect_driver() {
	DEVICE="$(_ 'driver')"
	for VID in $(busybox lspci | grep 'Class 03' | cut -c21-24 | sort -u); do
		case $VID in
			1022|1002) d=ati ;;
			8086) d=intel ;;
			10de) d=nouveau ;;
			1039) d=sis ;;
			15ad) d=vmware ;;
			*) $DIALOG --colors --msgbox \
				"\Z1 $(_n 'Failed to setup $DEVICE') \Zn (unknown hardware)" 5 68 ;;
		esac
	[ $1 = sh ] || install_xorg $d
	done
}

inst_pkg() {
	pkg="$@" && colorize 3 $(_ 'Installing pkg: $pkg')
	CMD="sudo tazpkg -gi $@"
	test $(id -u) = 0 && CMD="tazpkg -gi $@"
	[ -d "$installed/$@" ] || $CMD
}

apps_dialog() {
	. ${user_conf}
	exec 3>&1
	app=$($DIALOG --clear --colors --backtitle "$msg" \
		--title "{\Z3 $(_n '${INST_i18n}: ${WM_i18n} + applications') \Zn}" \
		--inputmenu "" 21 52 18 \
	$(for a in WINDOW_MANAGER EDITOR BROWSER TERMINAL FILE_MANAGER; do
		eval n='$'"$a" ; echo "$a $n";
	done) 2>&1 1>&3)
	dialog_end
	case $app in
		RENAME*)appname=$(echo $app | cut -d " " -f3)
			app=$(echo $app | cut -d " " -f2) ;;
		*)
			app_name_dialog only-installed d a-item ;;
	esac
	if [ ! $appname = " " ]; then
		[ ! $appname = show_ALL ] || app_name_dialog full-list d
		if [ ! $(busybox which ${appname} 2>/dev/null) ]; then
			inst_pkg $appname
		[ -d "$installed/$appname" ] || inst_pkg \
		$(tazpkg search-pkgname /bin/$appname | grep -Ev '=|:| |/bin/')
		else
			sed '/'${app}'/s|=.*$|="'${appname}'"|' -i ${user_conf}
		fi
	fi
	msg=''; apps_dialog
}

app_name_dialog() {
	sz=28 ; [ $1 = full-list ] || sz=18
	exec 3>&1
	appname=$($DIALOG --clear --colors --title "${app}" \
	--menu "" $sz 50 24 $(gen_applist $app $@) 2>&1 1>&3) \
	dialog_end
}

gen_applist() {
. ${user_conf}
FILE_MANAGERS="clex caja emelfm2 mc pathfinder pcmanfm pcmanfm-qt ranger spacefm thunar xfe ytree"
BROWSERS="arora chrome cream dillo elinks firefox firefox-official iron links lynx \
 midori netsurf opera QtWeb qupzilla retawq seamonkey surf tazweb"
EDITORS="adie beaver emacs geany jed joe juffed ht le leafpad mcedit mousepad mp-5 \
 nano qedit SciTE vi vim xedit xfw zile"
TERMINALS="aterm evilvte lxterminal mrxvt qterminal sakura stjerm tilda urxvt vte \
 xterm yeahconsole"
WINDOW_MANAGERS="awesome blackbox compiz dwm echinus enlightenment fluxbox icewm jwm \
 lxde-session lxqt karmen matchbox openbox-session pekwm ratpoison xfwm4"

	eval list='$'"$1"S
	eval current='$'"$1"
for i in $current $(echo ' '$list' ' | sed "s| "$current" | |g") $4 ; do
	t="<--" ; [ $(busybox which $i 2>/dev/null) ] || t=---
	if [ $2 = only-installed ] && [ $t = --- ]; then
		case $i in
		a-item) i=show_ALL t="+"${INST_i18n};;
		*) i=" " t=" " ;; esac
	fi
	echo "$i"
	[ $3 = yad ] || echo -e "$(echo $t | sed "s|---|${INST_i18n}|g ; s| ||g")"
done
}

# Screen configuration dialog.
config_dialog() {
	. /etc/rcS.conf ; LM="ON"
	[ $LOGIN_MANAGER = "slim" ] || LM="OFF"

	exec 3>&1
	value=$($DIALOG \
		--clear --colors \
		--title "{ $(_n 'SliTaz Xorg config') }" \
		--menu "" 16 72 10 \
	"xorg"        "$(_n 'Install or reconfigure Xorg')" \
	"xorg-light"  "$(_n 'Install Xorg server (light version)')" \
	"onboot"      "$(_n 'AutoStart Xorg by SLiM on boot') ...| \Z5$LM\Zn" \
	"slim"        "$(_n '(Re)Start Simple Login Manager now')" \
	"wm_apps"     "$(_n '${INST_i18n}: ${WM_i18n} + applications')" \
	"quit"        "$(_n 'Quit Tazx utility')" \
	2>&1 1>&3)
	dialog_end
	# Set selected value.
	case "$value" in
		xorg)
			install_xorg ;;
		xorg-light)
			inst_pkg xorg-server-light
			inst_pkg xorg-xf86-video-fbdev
			xorg_conf_d ;;
		onboot)
			inst_pkg slim ; inst_pkg dbus
			if [ $LM = "OFF" ] ; then
				LM=slim
			else	LM=""
			fi
			sed '/LOGIN_MANAGER/s|=.*$|="'$LM'"|' -i /etc/rcS.conf
			[ $LM = "slim" ] || LM=disabled
			echo "start X on boot:" $(boldify $LM) ;;
		slim)
			inst_pkg slim ; inst_pkg dbus
			[ ! -z $XAUTHORITY ] || stopd slim ;sleep 2; startd slim ;;
		wm_apps)
			slitaz_apps_conf ; apps_dialog ;;
		*)
			exit 0 ;;
	esac
}

# ~/.config/slitaz/applications.conf: Missing = failed to login
# Make users applications.conf in /etc/skel so new added user will get
# a working X session. Note --> flavors can have a custom config in
# /etc/slitaz/applications that we must use.
slitaz_apps_conf() {
	apps_conf=/etc/slitaz/applications.conf
	
	if [ "$(id -u)" = 0 ]; then
		user_conf=${apps_conf}
		new_user_conf="/etc/skel/.config/slitaz/applications.conf"
		mkdir -p $(dirname $user_conf); cp -f ${apps_conf} ${new_user_conf}
	else
		# If started by: startx and with boot opts screen=text
		user_conf="$HOME/.config/slitaz/applications.conf"
		if [ ! -f "$user_conf" ]; then
			mkdir -p $(dirname $user_conf); cp ${apps_conf} ${user_conf}
		fi
	fi
	[ -f "$HOME/.xinitrc" ] || inst_pkg slitaz-configs-base --forced
}

# Commands

case "$1" in
	install-xorg)
		check_root
		install_xorg
		slitaz_apps_conf ;;
	
	config-xorg)
		check_root
		slitaz_apps_conf
		xorg_conf_d
		# Handle live option: screen=
		if grep -qs 'screen=' /proc/cmdline ; then
			MODE="$(sed 's/.*screen=\([0-9]*x[0-9]*\).*/\1/' < /proc/cmdline)"
			sed -i "s/.*EndSubSection.*/\\t\\tModes\\t\"$MODE\"\\n&/" \
				/etc/X11/xorg.conf.d/70-Screen.conf
		fi ;;
	
	init)
		# We don't need much config files with last Xorg version, So just
		# get files for starting an X session and config the keyboard.
		check_root
		slitaz_apps_conf
		keyboard_conf 
		gen_xorg_conf_file ;;
		
	keyboard)
		echo "Generating: 40-Keyboard.conf"
		keyboard_conf ;;
	
	get-applist)
		slitaz_apps_conf
		gen_applist $2 $3 $4 ;;
	auto)
		autoselect_driver sh
		inst_pkg xorg-server
		inst_pkg xorg-xf86-video-${d} ;;
	bpp)
		check_root
		xorg_conf_d
		case "$2" in 8|15|16|24) colors=$2 ;;
		*)	exec 3>&1 && colors=$($DIALOG --menu " " 12 12 12 \
			24 truecolor 16 hicolor 15 hicolor 8 256colors 2>&1 1>&3) ; dialog_end ;;
		esac
		sed 's|Monitor.*"$|&\n\tDefaultDepth '$colors'|' \
		-i ${xorg_config}/70-Screen.conf ;;
	*help)
		echo "Usage: $(basename $0) [install-xorg|bpp|auto|config-xorg|init|keyboard]" ;;
	*)
		# User can get a new .xinitrc with tazx from cmdline.
		if [ $(id -u) == 0 ]; then
			slitaz_apps_conf
			config_dialog
		else	msg="\Z1 $(_n 'Run tazx as root if you need to configure xorg') \Zn"
			slitaz_apps_conf
			apps_dialog
		fi
		# gen_xsession
		;;
esac

exit 0
