#!/bin/sh
# slitaz-installer - SliTaz GNU/Linux installer.
#
# So this is SliTaz installer using dialog boxes. All the comments are in
# English but displayed messages are in French. The scrip starts with a 
# few main variables, then all the functions and then a sequece of functions.
#
# (C) 2007-2008 SliTaz - GNU General Public License v3.
#
# Author : Christophe Lincoln <pankso@slitaz.org>
#
VERSION=1.0
: ${DIALOG=dialog}

# Installer actions can be specified on cmdline (install or upgrade).
if [ -n "$1" ]; then
	ACTION=$1
else
	ACTION=install
fi

# We need to know cdrom device and kernel version string to copy files.
DRIVE_NAME=`cat /proc/sys/dev/cdrom/info | grep "drive name" | cut -f 3`
CDROM=/dev/$DRIVE_NAME
KERNEL=vmlinuz-`uname -r`
TARGET_ROOT=/mnt/target
LOG=/var/log/slitaz-installer.log
BACKLIST="SliTaz GNU/Linux installer"

# start_install messages (to translate)
START_INSTALL_MSG="\n
Bienvenue dans l'installateur de SliTaz GNU/Linux. Vous pouvez utiliser \
les flèches du clavier et la touche ENTER ou la souris pour valider. Il vous \
suffira de répondre à quelques questions lors des différentes étapes \
d'installation. L'installateur va commencer par monter le cdrom, vous \
demander la partition à utiliser comme racine du système et vous proposer \
de la formater. Ensuite il va copier les fichiers depuis le cdrom, les \
décompresser, les installer et va préconfigurer le système. Pour finir,
vous aurez aussi la possibilité d'installer le gestionnaire de démarrage 
GRUB, si besoin est.\n\n
\Z2Commencer l'installation ?\Zn"

#######################
# Installer functions #
#######################

# Display error message.
error_message()
{
	$DIALOG --title " Erreur " \
		--colors --backtitle "$BACKLIST" \
		--clear --msgbox "\n$ERROR_MSG" 18 70
}

# Exit install if user is not root.
check_root()
{
	if test $(id -u) != 0 ; then
	ERROR_MSG="\
[\Z6fr\Zn] Vous devez être root pour installer SLiTaz GNU/Linux. Vous pouvez \
utiliser 'su' suivi du mot de passe administrateur pour devenir root \
et relancer l'installation.\n\n
[\Z6en\Zn] You must be root administrator to start SliTaz installer, please \
use 'su' to get a root SHell and restart installation."
		error_message
		exit 0
	fi
}

# This function is used after each screen to contine or abort install.
check_retval()
{
case $retval in
	0)
		continue ;;
	1)
		echo -e "\nArrêt volontaire.\n" && exit 0 ;;
	3)
		continue ;;
	255)
		echo -e "ESC pressed.\n" && exit 0 ;;
esac
}

# Start install with basic informations.
start_install()
{
	$DIALOG --title " Débuter l'installation " \
		--backtitle "$BACKLIST" \
		--clear --colors --yesno "$START_INSTALL_MSG" 18 70
	retval=$?
	check_retval
	echo "start_infos: `date`" > $LOG
}

# Mount cdrom and verify if it's realy SliTaz CD.
mount_cdrom()
{
	ERROR_MSG=""
	umount /media/cdrom 2>/dev/null
	(
	echo "XXX" && echo 30
	echo -e "\nCréation du point de montage (/media/cdrom)..."
	echo "XXX"		
	mkdir -p /media/cdrom
	sleep 1
	echo "XXX" && echo 60
	echo -e "\nMontage du cdrom ($CDROM)..."
	echo "XXX"
	mount -t iso9660 $CDROM /media/cdrom 2>>$LOG
	echo "XXX" && echo 90
	echo -e "\nVérification du media d'installation..."
	echo "XXX"
	sleep 2
	) |
	$DIALOG --title " Montage du cdrom " \
		--backtitle "$BACKLIST" \
		--gauge "Préparation du media d'installation..." 18 70 0
	# Exit with error msg if no rootfs.gz found
	if [ ! -f /media/cdrom/boot/rootfs.gz ]; then
		ERROR_MSG="\
Impossible de trouver : rootfs.gz\n\n
L'archive du système de fichiers racine n'est pas présente sur le cdrom. \
Il se peut que cette erreur soit due au fait que le LiveCD de SliTaz ne soit \
pas inséré dans le premier lecteur CD/DVD et que le media n'as pas pu être \
correctement monté. Arrêt."
		error_message
		echo "missing: /media/cdrom/boot/rootfs.gz" >>$LOG
		exit 1
	fi
}

# Display a list of available partition.
fdisk_list()
{
	LIST_PARTITIONS=`fdisk -l | grep ^/dev | sed s/'e Win95'/'e'/g`
	$DIALOG --title " Partitions tables " \
		--backtitle "$BACKLIST" \
		--clear --msgbox "\n
Liste des partitions disponibles :\n\n
$LIST_PARTITIONS" 18 70
}

# We need a partition to install (inputbox).
ask_for_target_dev()
{
	exec 3>&1
	TARGET_DEV=`$DIALOG --title " Partition racine " \
		--backtitle "$BACKLIST" --clear \
		--extra-label "List" --extra-button \
		--colors --inputbox "\n
Veuillez indiquer la partition à utiliser pour installer SliTaz GNU/Linux, \
exemple: '/dev/hda1'. Vous pouvez utiliser le bouton 'List' pour afficher \
une liste des partitions disponibles sur le ou les disques durs et revenir \
ensuite à cet écran. A noter qu'il faut au minimum 100 Mb pour le coeur du \
système et que si vous prévoyez d'installer de nouveaux paquets, vous serez \
plus à l'aise avec environ 400 Mb.\n\n
\Z2Partition à utiliser:\Zn" 18 70 2>&1 1>&3`
	retval=$?
	exec 3>&-
	check_retval
	# Display list and comme back.
	if [ "$retval" = "3" ]; then
		fdisk_list
		ask_for_target_dev
	fi
	# Empty value.
	if [ -z $TARGET_DEV ]; then
		ask_for_target_dev
	fi
	# Check if specified device exist in /proc/partitions.
	DEV_NAME=${TARGET_DEV#/dev/}
	if cat /proc/partitions | grep -q $DEV_NAME; then
		echo "ask_for_target_dev: $TARGET_DEV" >>$LOG
	else
		ERROR_MSG="La partition \Z2$TARGET_DEV\Zn ne semble pas exister."
		error_message
		ask_for_target_dev
	fi
}

# Mkfs if needed/wanted.
ask_for_mkfs_target_dev()
{
	$DIALOG --title " Formater " \
		--backtitle "$BACKLIST" \
		--clear --colors --yesno "\n
SliTaz va être installé sur la partition : $TARGET_DEV\n\n
Vous avez la possibilité de formater la partition en ext3 ou d'utiliser \
le système de fichiers déjà présent sur la partition. Le format ext3 est \
un système de fichiers propre à Linux, robuste, stable et jounalisé, c'est \
le format conseillé. Faites attention, si vous formatez toutes les données \
de cette partition seront définitivement détruites. Si vous conservez le \
système de fichiers actuel, la partition sera nettoyée et les données 
utilisateurs conservées (/home).\n\n
\Z2Faut t'il formater la partition en ext3 ?\Zn" 18 70
	retval=$?
	case $retval in
		0)
			MKFS_TARGET_DEV="ext3"
			echo "mkfs_target_dev: ext3" >>$LOG ;;
		1)
			CLEAN="clean"
			echo "mkfs_target_dev: clean" >>$LOG ;;
		255)
			echo -e "ESC pressed.\n" && exit 0 ;;
	esac
	
}

# Mount and mkfs with progress.
prepare_target_dev()
{
	(
	echo "XXX" && echo 30
	echo -e "\nPréparation de la partition cible..."
	echo "XXX"
	# Mount point can be already used.
	if mount | grep -q $TARGET_ROOT; then
		umount $TARGET_ROOT 2>$LOG
	fi
	sleep 2
		
	if [ "$MKFS_TARGET_DEV" == "ext3" ]; then
		echo "XXX" && echo 60
		echo -e "\nExécution de mkfs.ext3 sur $TARGET_DEV"
		echo "XXX"		
		mkfs.ext3 $TARGET_DEV >>$LOG 2>>$LOG
	else
		echo "XXX" && echo 60
		echo -e "\nLa partition ($TARGET_DEV) sera nettoyée..."
		echo "XXX"
		sleep 2
	fi
	
	echo "XXX" && echo 90
	echo -e "\nCréation du point de montage: $TARGET_ROOT"
	echo "XXX"	
	mkdir -p $TARGET_ROOT
	sleep 2
	
	) |
	$DIALOG --title " Préparation de la cible " \
		--backtitle "$BACKLIST" \
		--gauge "Target in preparation..." 18 70 0
	# Mount target
	mount $TARGET_DEV $TARGET_ROOT >>$LOG 2>>$LOG
}

# Ask for hostanme before installing files.
ask_for_hostname()
{
	exec 3>&1
	HOSTNAME=`$DIALOG --title " Hostname " \
		--backtitle "$BACKLIST" --clear \
		--colors --inputbox "\n
Veuillez indiquer le nom de machine à utiliser pour votre système SliTaz.\
Le nom de machine ou 'hostname' est utilisé pour identifier votre machine sur
le réseau et en local par le système (defaut: slitaz). A noter que cette\
valeur peut aussi être modifiée une fois le système installé en utilisant
'netbox' graphiquement ou en ligne de commande.\n\n
\Z2Nom de machine:\Zn" 18 70 2>&1 1>&3`
	retval=$?
	exec 3>&-
	check_retval
	# Empty value.
	if [ -z $HOSTNAME ]; then
		HOSTNAME="slitaz"
	fi
}

# Get a clean target device (15%).
clean_target()
{
	if [ "$CLEAN" == "clean" ]; then
		echo "XXX" && echo 15
		echo -e "\nNettoyage de la partition racine ($TARGET_DEV)..."
		echo "XXX"
		cd $TARGET_ROOT
		# Keep /home in case of reinstall.
		for dir in *
		do
			case "$dir" in
				home)
					mv home home.bak
					echo "keeping /home found on: $TARGET_DEV" >>$LOG ;;
				lost+found)
					break ;;
				*)
					rm -rf $dir 2>$LOG ;;
			esac
		done
		if [ -d $TARGET_ROOT/mklost+found ]; then
			mklost+found 2>>$LOG
		fi
	fi
	sleep 2
}

# Kernel is rename to standard vmlinuz-$VERSION.
install_kernel()
{
	mkdir -p $TARGET_ROOT/boot
	cp /media/cdrom/boot/bzImage $TARGET_ROOT/boot/$KERNEL
	echo "install_kernel: $KERNEL" >>$LOG
	sleep 2
}

# Copy isolinux r/w files (not syslinux, some files are read only).
copy_bootloaders()
{
	if [ -d "/media/cdrom/boot/isolinux" ]; then
		mkdir -p $TARGET_ROOT/boot/isolinux
		cp -a /media/cdrom/boot/isolinux/*.cfg $TARGET_ROOT/boot/isolinux
		cp -a /media/cdrom/boot/isolinux/*.kbd $TARGET_ROOT/boot/isolinux
		cp -a /media/cdrom/boot/isolinux/*.txt $TARGET_ROOT/boot/isolinux
		cp -a /media/cdrom/boot/isolinux/*.bin $TARGET_ROOT/boot/isolinux
		cp -a /media/cdrom/boot/isolinux/*.msg $TARGET_ROOT/boot/isolinux
		cp -a /media/cdrom/boot/isolinux/*.lss $TARGET_ROOT/boot/isolinux
		cp -a /media/cdrom/boot/isolinux/*.c32 $TARGET_ROOT/boot/isolinux
	fi
}

# Extract lzma'ed or gziped rootfs.
extract_rootfs()
{
	cd $TARGET_ROOT
	(zcat rootfs.gz 2>/dev/null || lzma d rootfs.gz -so 2>/dev/null || \
	 cat rootfs.gz) 2>>$LOG | cpio -id 2>>$LOG
	rm -f rootfs.gz
	# remove link to cdrom
	[ -d cdrom ] && rmdir cdrom
	if [ -L usr ]; then
		rm usr
		cp -a /media/cdrom/usr .
	fi
	# unpack /usr
	sqfs="/media/cdrom/usr.sqfs"
	[ -f $sqfs ] || sqfs=".usr.sqfs"
	if [ -f $sqfs ]; then
		rmdir usr
		sbin/unsquashfs -d usr $sqfs
		[ "$sqfs" = ".usr.sqfs" ] && rm -f $sqfs
	fi
	if [ -d usr/.moved ]; then
		( cd usr/.moved ; find * -print ) | \
		while read file; do
			[ -L "$file" ] || continue
			rm -f "$file"
			mv "usr/.moved/$file" "$file"
		done
		rm -rf usr/.moved
	fi
}

# /etc/skel (60%)
gen_etc_skel()
{
	#Maybe we don't have /home/hacker directory
	if [ -d $TARGET_ROOT/home/hacker ]; then
		echo "XXX" && echo 60
		echo -e "\nCopie des fichiers utilisateurs par défaut (/etc/skel)..."
		echo "XXX"
		cp -a $TARGET_ROOT/home/hacker $TARGET_ROOT/etc/skel
	else
		echo "XXX" && echo 60
		echo -e "\nCréation du répertoire (/etc/skel)..."
		echo "XXX"
		mkdir -p $TARGET_ROOT/etc/skel \
			$TARGET_ROOT/etc/Documents \
			$TARGET_ROOT/etc/skel/Images \
			$TARGET_ROOT/etc/skel/.local/bin \
			$TARGET_ROOT/etc/skel/.local/share
	fi
	sleep 2
}

# Pre configure freshly installed system (70 - 90%).
pre_config_system()
{
	cd $TARGET_ROOT
	# Restore backup of existing /home if exist.
	# (created by prepare_target_dev)
	if [ -d home.bak ]; then
		echo "XXX" && echo 75
		echo -e "\nRestauration du répertoire /home..."
		echo "XXX"
		rm -rf home
		mv home.bak home
		sleep 2
	fi
	# Add root device to CHECK_FS in rcS.conf to check filesystem 
	# on each boot.
	echo "XXX" && echo 80
	echo -e "\nAjout de $TARGET_DEV à CHECK_FS du fichier /etc/rcS.conf..."
	echo "XXX"
	sed -i s#'CHECK_FS=\"\"'#"CHECK_FS=\"$TARGET_DEV\""# etc/rcS.conf
	sleep 2
	# Set hostname.
	echo "XXX" && echo 85
	echo -e "\nConfiguration du nom de machine: $HOSTNAME"
	echo "XXX"
	echo $HOSTNAME > etc/hostname
	sleep 2
}

# Determin GRUB partition number and GRUB disk number.
grub_config()
{
	DISK_LETTER=${TARGET_DEV#/dev/[h-s]d}
	DISK_LETTER=${DISK_LETTER%[0-9]}
	GRUB_PARTITION=$((${TARGET_DEV#/dev/[h-s]d[a-z]}-1))
	for disk in a b c d e f g h
	do
		nb=$(($nb+1))
		if [ "$disk" = "$DISK_LETTER" ]; then
			GRUB_DISK=$(($nb-1))
			break
		fi
	done
	GRUB_ROOT="(hd${GRUB_DISK},${GRUB_PARTITION})"
	# Creat the target GRUB configuration.
	mkdir -p $TARGET_ROOT/boot/grub
	cat > $TARGET_ROOT/boot/grub/menu.lst << _EOF_
# /boot/grub/menu.lst: GRUB boot loader configuration.
#

# By default, boot the first entry.
default 0

# Boot automatically after 8 secs.
timeout 8

# Change the colors.
color yellow/brown light-green/black

# For booting SliTaz from : $TARGET_DEV
#
title 	SliTaz GNU/Linux (cooking) (Kernel $KERNEL)
		root $GRUB_ROOT
		kernel /boot/$KERNEL root=$TARGET_DEV

_EOF_
	# log
	echo "grub_config: $TARGET_ROOT/boot/grub/menu.lst" >>$LOG
	sleep 2
}

# Files install with gauge, calling for functions or with cmds.
install_files()
{
	(
	
	echo "XXX" && echo 10
	echo -e "\nNettoyage de la partition racine si nécessaire..."
	echo "XXX"
	clean_target
	
	echo "XXX" && echo 20
	echo -e "\nInstallation du noyau ($KERNEL)..."
	echo "XXX"
	install_kernel
	
	echo "XXX" && echo 30
	echo -e "\nCopie des bootloaders syslinux/isolinux..."
	echo "XXX"
	copy_bootloaders
	
	echo "XXX" && echo 40
	echo -e "\nCopie du système compressé (rootfs.gz)..."
	echo "XXX"
	cp /media/cdrom/boot/rootfs.gz $TARGET_ROOT
	sleep 2
	
	echo "XXX" && echo 50
	echo -e "\nExtraction du système racine..."
	echo "XXX"
	extract_rootfs
	
	echo "XXX" && echo 60
	echo -e "\nCopie des fichiers utilisateurs par défaut (/etc/skel)..."
	echo "XXX"
	gen_etc_skel
	sleep 2
	
	echo "XXX" && echo 70
	echo -e "\nPreconfiguration du système..."
	echo "XXX"
	pre_config_system
	
	echo "XXX" && echo 90
	echo -e "\nCréation du fichier de configuration de GRUB (menu.lst)..."
	echo "XXX"
	grub_config
	
	echo "XXX" && echo 100
	echo -e "\nFin de l'installation des fichiers..."
	echo "XXX"
	echo "install_files: OK" >>$LOG
	sleep 4
	
	) |
	$DIALOG --title " Installation des fichiers " \
		--backtitle "$BACKLIST" \
		--gauge "Starting to install files..." 18 70 0
}

# GRUB info with disk name used for grub-install
grub_install()
{
	TARGET_DISK=`echo $TARGET_DEV | sed s/"[0-9]"/''/`
	$DIALOG --title " GRUB install " \
		--backtitle "$BACKLIST" \
		--clear --colors --yesno "\n
Avant de redémarrer sur votre nouveau système SliTaz GNU/Linux, veuillez \
vous assurer qu'un gestionnaire de démarrage est bien installé. Si ce n'est \
pas le cas vous pouvez répondre oui et installer GRUB. Si vous n'installez \
pas GRUB, un fichier de configuration (menu.lst) a été généré pendant \
l'installation, il contient les lignes qui permettent de démarrer SliTaz.\n\n
Une fois installé, GRUB peut facilement être reconfiguré et propose un SHell \
interactif au boot.\n\n
\Z2Faut t'il installer GRUB sur: $TARGET_DISK ?\Zn" 18 70
	retval=$?
	case $retval in
		0)
			(
			echo "XXX" && echo 50
			echo -e "\nExécution de grub-install sur : $TARGET_DISK..."
			echo "XXX"		
			grub-install --no-floppy \
				--root-directory=$TARGET_ROOT $TARGET_DISK 2>>$LOG
			echo "XXX" && echo 100
			echo -e "\nFin de l'installation..."
			echo "XXX"
			sleep 2
			) |
			$DIALOG --title " GRUB install " \
				--backtitle "$BACKLIST" \
				--gauge "Installation de GRUB..." 18 70 0 ;;
		1)
			echo "grub_install: NO" >>$LOG ;;
		255)
			echo -e "ESC pressed.\n" && exit 0 ;;
	esac
}

# Copy log file, umount target and eject cdrom
umount_devices()
{
	(
	echo "XXX" && echo 25
	echo -e "\nCopie du fichier de log ($LOG)..."
	echo "XXX"
	cp -a $LOG $TARGET_ROOT/var/log
	sleep 2
	echo "XXX" && echo 50
	echo -e "\nDémontage de la cible ($TARGET_DEV)..."
	echo "XXX"		
	if mount | grep -q $TARGET_ROOT; then
		umount $TARGET_ROOT 2>/dev/null
	fi
	echo "XXX" && echo 75
	echo -e "\nDémontage et éjection du cdrom..."
	echo "XXX"
	if mount | grep -q /media/cdrom; then
		umount /media/cdrom
		eject
	fi
	sleep 2
	echo "XXX" && echo 100
	echo -e "\n$TITLE..."
	echo "XXX"
	sleep 2
	) |
	$DIALOG --title " $TITLE " \
		--backtitle "$BACKLIST" \
		--gauge "$TITLE starting..." 18 70 0
}

# End of installation
end_of_install()
{
	echo "end_of_install: `date`" >>$LOG
	$DIALOG --title " Installation terminée " \
		--backtitle "$BACKLIST" \
		--yes-label "Exit" \
		--no-label "Reboot" \
		--clear --colors --yesno "\n
L'installation est terminée. Vous pouvez dès maintenant redémarrer (reboot) \
sur votre nouveau système SliTaz GNU/Linux et commencer à finement le \
configurer en fonction de vos besoins et préférences. Vous trouverez de l'aide \
ou un support technique gratuit via la liste de discussion et/ou le forum \
officiel du projet. Pour bien commencer à utiliser le système, vous pouvez \
vous référer aux documents du Handbook de SliTaz et utiliser le gestionnaire \
de paquets Tazpkg pour installer de nouveaux logiciels prêts à savourer." 18 70
	retval=$?
	case $retval in
	0)
		TITLE="Exiting"
		umount_devices ;;
	1)
		TITLE="Rebooting"
		umount_devices
		reboot || reboot -f ;;
	255)
		echo -e "ESC pressed.\n" && exit 0 ;;
esac
}

#####################
# Upgrade functions #
#####################

# Start upgrade with basic informations (TODO).
start_upgrade()
{
	$DIALOG --title " Mise à jour du système " \
		--backtitle "$BACKLIST" \
		--clear --colors --yesno "\n
La fonction de mise à jour complète du système n'est pas encore implémentée.
\n\n
* Montage de la partition.\n
* Sauvegarde des fichiers de configuration.\n
* Créer un diff entre les paquets du cdrom et ceux installés.\n
* Nettoyer la partition.\n
* Installer la version du cdrom.\n
* Restauration des fichiers de config.\n
* Réinstaller les paquets manquants depuis le miroir." 18 70
	retval=$?
	#check_retval
	#echo "start_upgarde: `date`" > $LOG
	exit 0
}

######################
# Installer sequence #
######################

case $ACTION in
	upgrade)
		check_root
		start_upgrade
		#mount_cdrom
		;;
	install|*)
		check_root
		start_install
		mount_cdrom
		ask_for_target_dev
		ask_for_mkfs_target_dev
		prepare_target_dev
		ask_for_hostname
		install_files
		grub_install
		end_of_install
		;;
esac

exit 0
